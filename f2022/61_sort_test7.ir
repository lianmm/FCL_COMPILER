	alloca	#800	buf

merge_sort:
	param	l
	alloca	#4	l
	param	r
	alloca	#4	r
	load	l	t0
	ASSIGN	t1	#1
	add	t0	t1	t2
	load	r	t3
	jge	t2	t3	t4
	goto_eq	t4	#1	.L2
	goto	.L3

.L2:
	goto	.L1

.L3:
	load	l	t5
	load	r	t6
	add	t5	t6	t7
	ASSIGN	t8	#2
	div	t7	t8	t9
	alloca	#4	mid
	ASSIGN	mid	t9
	load	mid	t10
	arg	t5
	arg	t10
	call_void	merge_sort
	arg	t10
	arg	t6
	call_void	merge_sort
	alloca	#4	i
	ASSIGN	i	t5
	alloca	#4	j
	ASSIGN	j	t10
	alloca	#4	k
	ASSIGN	k	t5

.L16:
	load	i	t11
	load	mid	t12
	jlt	t11	t12	t13
	goto_eq	t13	#1	.L20
	goto	.L19

.L20:
	load	j	t14
	load	r	t15
	jlt	t14	t15	t16

.L21:

.L19:
	goto_eq	t13	#1	.L17
	goto	.L18

.L17:
	load	i	t18
	ASSIGN	t19	#100
	ASSIGN	t20	#0
	mul	t19	t20	t21
	add	t18	t21	t22
	exp_arroff	t23,	[buf, t22]
	load	j	t24
	ASSIGN	t25	#100
	ASSIGN	t26	#0
	mul	t25	t26	t27
	add	t24	t27	t28
	exp_arroff	t29,	[buf, t28]
	jlt	t23	t29	t30
	goto_eq	t30	#1	.L28
	goto	.L29

.L28:
	load	i	t31
	ASSIGN	t32	#100
	ASSIGN	t33	#0
	mul	t32	t33	t34
	add	t31	t34	t35
	exp_arroff	t36,	[buf, t35]
	load	k	t37
	ASSIGN	t38	#100
	ASSIGN	t39	#1
	mul	t38	t39	t40
	add	t37	t40	t41
	arroff_exp	t36,	[buf, t41]
	load	i	t42
	ASSIGN	t43	#1
	add	t42	t43	t44
	ASSIGN	i	t44
	goto	.L30

.L29:
	load	j	t45
	ASSIGN	t46	#100
	ASSIGN	t47	#0
	mul	t46	t47	t48
	add	t45	t48	t49
	exp_arroff	t50,	[buf, t49]
	load	k	t51
	ASSIGN	t52	#100
	ASSIGN	t53	#1
	mul	t52	t53	t54
	add	t51	t54	t55
	arroff_exp	t50,	[buf, t55]
	load	j	t56
	ASSIGN	t57	#1
	add	t56	t57	t58
	ASSIGN	j	t58

.L30:
	load	k	t59
	ASSIGN	t60	#1
	add	t59	t60	t61
	ASSIGN	k	t61
	goto	.L16

.L18:

.L58:
	load	i	t62
	load	mid	t63
	jlt	t62	t63	t64
	goto_eq	t64	#1	.L59
	goto	.L60

.L59:
	load	i	t65
	ASSIGN	t66	#100
	ASSIGN	t67	#0
	mul	t66	t67	t68
	add	t65	t68	t69
	exp_arroff	t70,	[buf, t69]
	load	k	t71
	ASSIGN	t72	#100
	ASSIGN	t73	#1
	mul	t72	t73	t74
	add	t71	t74	t75
	arroff_exp	t70,	[buf, t75]
	load	i	t76
	ASSIGN	t77	#1
	add	t76	t77	t78
	ASSIGN	i	t78
	load	k	t79
	ASSIGN	t80	#1
	add	t79	t80	t81
	ASSIGN	k	t81
	goto	.L58

.L60:

.L79:
	load	j	t82
	load	r	t83
	jlt	t82	t83	t84
	goto_eq	t84	#1	.L80
	goto	.L81

.L80:
	load	j	t85
	ASSIGN	t86	#100
	ASSIGN	t87	#0
	mul	t86	t87	t88
	add	t85	t88	t89
	exp_arroff	t90,	[buf, t89]
	load	k	t91
	ASSIGN	t92	#100
	ASSIGN	t93	#1
	mul	t92	t93	t94
	add	t91	t94	t95
	arroff_exp	t90,	[buf, t95]
	load	j	t96
	ASSIGN	t97	#1
	add	t96	t97	t98
	ASSIGN	j	t98
	load	k	t99
	ASSIGN	t100	#1
	add	t99	t100	t101
	ASSIGN	k	t101
	goto	.L79

.L81:

.L100:
	load	l	t102
	load	r	t103
	jlt	t102	t103	t104
	goto_eq	t104	#1	.L101
	goto	.L102

.L101:
	load	l	t105
	ASSIGN	t106	#100
	ASSIGN	t107	#1
	mul	t106	t107	t108
	add	t105	t108	t109
	exp_arroff	t110,	[buf, t109]
	load	l	t111
	ASSIGN	t112	#100
	ASSIGN	t113	#0
	mul	t112	t113	t114
	add	t111	t114	t115
	arroff_exp	t110,	[buf, t115]
	load	l	t116
	ASSIGN	t117	#1
	add	t116	t117	t118
	ASSIGN	l	t118
	goto	.L100

.L102:

.L1:
	func_end:	merge_sort

main:
	ASSIGN	t0	#0
	ASSIGN	t1	#100
	ASSIGN	t2	#0
	mul	t1	t2	t3
	add	t0	t3	t4
	exp_arroffa	buf	t4	t5
	arg	t5
	CALL	getarray	t6
	alloca	#4	n
	ASSIGN	n	t6
	ASSIGN	t7	#0
	load	n	t8
	arg	t7
	arg	t8
	call_void	merge_sort
	ASSIGN	t9	#0
	ASSIGN	t10	#100
	ASSIGN	t11	#0
	mul	t10	t11	t12
	add	t9	t12	t13
	exp_arroffa	buf	t13	t14
	arg	t8
	arg	t14
	call_void	putarray
	ASSIGN	t15	#0
	ASSIGN	r0	t15
	goto	.L115

.L115:
	func_end:	main
