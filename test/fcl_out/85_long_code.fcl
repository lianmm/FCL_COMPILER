	alloca	#4	n

bubblesort:
	param	arr
	alloca	#4	arr
	alloca	#4	i
	alloca	#4	j
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L5:
	load	i	t4
	load	n	t1
	ASSIGN	t2	#1
	sub	t1	t2	t3
	jlt	t4	t3	t5
	goto_eq	t5	#1	.L6
	goto	.L7

.L6:
	ASSIGN	t6	#0
	ASSIGN	j	t6

.L17:
	load	j	t12
	load	n	t7
	load	i	t8
	sub	t7	t8	t9
	ASSIGN	t10	#1
	sub	t9	t10	t11
	jlt	t12	t11	t13
	goto_eq	t13	#1	.L18
	goto	.L19

.L18:
	load	arr	t14
	exp_arroff	t15,	[t14, t12]
	ASSIGN	t16	#1
	add	t12	t16	t17
	load	arr	t18
	exp_arroff	t19,	[t18, t17]
	jgt	t15	t19	t20
	goto_eq	t20	#1	.L29
	goto	.L30

.L29:
	alloca	#4	tmp
	ASSIGN	t21	#1
	add	t12	t21	t22
	load	arr	t23
	exp_arroff	t24,	[t23, t22]
	ASSIGN	tmp	t24
	ASSIGN	t25	#1
	add	t12	t25	t26
	load	arr	t27
	exp_arroff	t28,	[t27, t12]
	load	arr	t29
	arroff_exp	t28,	[t29, t26]
	load	tmp	t30
	load	arr	t31
	arroff_exp	t30,	[t31, t12]

.L30:
	load	j	t32
	ASSIGN	t33	#1
	add	t32	t33	t34
	ASSIGN	j	t34
	goto	.L17

.L19:
	load	i	t35
	ASSIGN	t36	#1
	add	t35	t36	t37
	ASSIGN	i	t37
	goto	.L5

.L7:
	ASSIGN	t38	#0
	ASSIGN	r0	t38
	goto	.L1

.L1:
	func_end:	bubblesort

insertsort:
	param	a
	alloca	#4	a
	alloca	#4	i
	ASSIGN	t0	#1
	ASSIGN	i	t0

.L68:
	load	i	t1
	load	n	t2
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L69
	goto	.L70

.L69:
	alloca	#4	temp
	load	a	t4
	exp_arroff	t5,	[t4, t1]
	ASSIGN	temp	t5
	alloca	#4	j
	load	i	t6
	ASSIGN	t7	#1
	sub	t6	t7	t8
	ASSIGN	j	t8

.L83:
	load	j	t9
	ASSIGN	t10	#-1
	jgt	t9	t10	t11
	goto_eq	t11	#1	.L87
	goto	.L86

.L87:
	load	temp	t14
	load	a	t12
	exp_arroff	t13,	[t12, t9]
	jlt	t14	t13	t15

.L88:

.L86:
	goto_eq	t11	#1	.L84
	goto	.L85

.L84:
	ASSIGN	t17	#1
	add	t9	t17	t18
	load	a	t19
	exp_arroff	t20,	[t19, t9]
	load	a	t21
	arroff_exp	t20,	[t21, t18]
	load	j	t22
	ASSIGN	t23	#1
	sub	t22	t23	t24
	ASSIGN	j	t24
	goto	.L83

.L85:
	load	j	t25
	ASSIGN	t26	#1
	add	t25	t26	t27
	load	temp	t28
	load	a	t29
	arroff_exp	t28,	[t29, t27]
	load	i	t30
	ASSIGN	t31	#1
	add	t30	t31	t32
	ASSIGN	i	t32
	goto	.L68

.L70:
	ASSIGN	t33	#0
	ASSIGN	r0	t33
	goto	.L64

.L64:
	func_end:	insertsort

QuickSort:
	param	arr
	alloca	#4	arr
	param	low
	alloca	#4	low
	param	high
	alloca	#4	high
	load	low	t0
	load	high	t1
	jlt	t0	t1	t2
	goto_eq	t2	#1	.L120
	goto	.L121

.L120:
	alloca	#4	i
	ASSIGN	i	t0
	alloca	#4	j
	ASSIGN	j	t1
	alloca	#4	k
	load	arr	t3
	exp_arroff	t4,	[t3, t0]
	ASSIGN	k	t4

.L134:
	load	i	t5
	load	j	t6
	jlt	t5	t6	t7
	goto_eq	t7	#1	.L135
	goto	.L136

.L135:

.L140:
	load	i	t8
	load	j	t9
	jlt	t8	t9	t10
	goto_eq	t10	#1	.L144
	goto	.L143

.L144:
	load	arr	t11
	exp_arroff	t12,	[t11, t9]
	load	k	t13
	ASSIGN	t14	#1
	sub	t13	t14	t15
	jgt	t12	t15	t16

.L145:

.L143:
	goto_eq	t10	#1	.L141
	goto	.L142

.L141:
	load	j	t18
	ASSIGN	t19	#1
	sub	t18	t19	t20
	ASSIGN	j	t20
	goto	.L140

.L142:
	load	i	t21
	load	j	t22
	jlt	t21	t22	t23
	goto_eq	t23	#1	.L161
	goto	.L162

.L161:
	load	arr	t24
	exp_arroff	t25,	[t24, t22]
	load	arr	t26
	arroff_exp	t25,	[t26, t21]
	load	i	t27
	ASSIGN	t28	#1
	add	t27	t28	t29
	ASSIGN	i	t29

.L162:

.L175:
	load	i	t30
	load	j	t31
	jlt	t30	t31	t32
	goto_eq	t32	#1	.L179
	goto	.L178

.L179:
	load	arr	t33
	exp_arroff	t34,	[t33, t30]
	load	k	t35
	jlt	t34	t35	t36

.L180:

.L178:
	goto_eq	t32	#1	.L176
	goto	.L177

.L176:
	load	i	t38
	ASSIGN	t39	#1
	add	t38	t39	t40
	ASSIGN	i	t40
	goto	.L175

.L177:
	load	i	t41
	load	j	t42
	jlt	t41	t42	t43
	goto_eq	t43	#1	.L193
	goto	.L194

.L193:
	load	arr	t44
	exp_arroff	t45,	[t44, t41]
	load	arr	t46
	arroff_exp	t45,	[t46, t42]
	load	j	t47
	ASSIGN	t48	#1
	sub	t47	t48	t49
	ASSIGN	j	t49

.L194:
	goto	.L134

.L136:
	load	i	t50
	load	k	t51
	load	arr	t52
	arroff_exp	t51,	[t52, t50]
	alloca	#4	tmp
	ASSIGN	t53	#1
	sub	t50	t53	t54
	ASSIGN	tmp	t54
	load	arr	t55
	load	tmp	t56
	arg	t55
	arg	t0
	arg	t56
	CALL	QuickSort	t57
	ASSIGN	tmp	t57
	ASSIGN	t58	#1
	add	t50	t58	t59
	ASSIGN	tmp	t59
	load	arr	t60
	arg	t60
	arg	t59
	arg	t1
	CALL	QuickSort	t61
	ASSIGN	tmp	t61

.L121:
	ASSIGN	t62	#0
	ASSIGN	r0	t62
	goto	.L119

.L119:
	func_end:	QuickSort

getMid:
	param	arr
	alloca	#4	arr
	alloca	#4	mid
	load	n	t0
	ASSIGN	t1	#2
	mod	t0	t1	t2
	ASSIGN	t3	#0
	eq	t2	t3	t4
	goto_eq	t4	#1	.L229
	goto	.L230

.L229:
	ASSIGN	t5	#2
	div	t0	t5	t6
	ASSIGN	mid	t6
	load	mid	t7
	load	arr	t8
	exp_arroff	t9,	[t8, t7]
	ASSIGN	t10	#1
	sub	t7	t10	t11
	load	arr	t12
	exp_arroff	t13,	[t12, t11]
	add	t9	t13	t14
	ASSIGN	t15	#2
	div	t14	t15	t16
	ASSIGN	r0	t16
	goto	.L228
	goto	.L231

.L230:
	load	n	t17
	ASSIGN	t18	#2
	div	t17	t18	t19
	ASSIGN	mid	t19
	load	mid	t20
	load	arr	t21
	exp_arroff	t22,	[t21, t20]
	ASSIGN	r0	t22
	goto	.L228

.L231:

.L228:
	func_end:	getMid

getMost:
	param	arr
	alloca	#4	arr
	alloca	#4000	count
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L263:
	load	i	t1
	ASSIGN	t2	#1000
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L264
	goto	.L265

.L264:
	ASSIGN	t4	#0
	arroff_exp	t4,	[count, t1]
	load	i	t5
	ASSIGN	t6	#1
	add	t5	t6	t7
	ASSIGN	i	t7
	goto	.L263

.L265:
	ASSIGN	t8	#0
	ASSIGN	i	t8
	alloca	#4	max
	alloca	#4	number
	ASSIGN	t9	#0
	ASSIGN	max	t9

.L284:
	load	i	t10
	load	n	t11
	jlt	t10	t11	t12
	goto_eq	t12	#1	.L285
	goto	.L286

.L285:
	alloca	#4	num
	load	arr	t13
	exp_arroff	t14,	[t13, t10]
	ASSIGN	num	t14
	load	num	t15
	exp_arroff	t16,	[count, t15]
	ASSIGN	t17	#1
	add	t16	t17	t18
	arroff_exp	t18,	[count, t15]
	exp_arroff	t19,	[count, t15]
	load	max	t20
	jgt	t19	t20	t21
	goto_eq	t21	#1	.L299
	goto	.L300

.L299:
	exp_arroff	t22,	[count, t15]
	ASSIGN	max	t22
	load	num	t23
	ASSIGN	number	t23

.L300:
	load	i	t24
	ASSIGN	t25	#1
	add	t24	t25	t26
	ASSIGN	i	t26
	goto	.L284

.L286:
	load	number	t27
	ASSIGN	r0	t27
	goto	.L259

.L259:
	func_end:	getMost

revert:
	param	arr
	alloca	#4	arr
	alloca	#4	temp
	alloca	#4	i
	alloca	#4	j
	ASSIGN	t0	#0
	ASSIGN	i	t0
	ASSIGN	t1	#0
	ASSIGN	j	t1

.L323:
	load	i	t2
	load	j	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L324
	goto	.L325

.L324:
	load	arr	t5
	exp_arroff	t6,	[t5, t2]
	ASSIGN	temp	t6
	load	arr	t7
	exp_arroff	t8,	[t7, t3]
	load	arr	t9
	arroff_exp	t8,	[t9, t2]
	load	temp	t10
	load	arr	t11
	arroff_exp	t10,	[t11, t3]
	load	i	t12
	ASSIGN	t13	#1
	add	t12	t13	t14
	ASSIGN	i	t14
	load	j	t15
	ASSIGN	t16	#1
	sub	t15	t16	t17
	ASSIGN	j	t17
	goto	.L323

.L325:
	ASSIGN	t18	#0
	ASSIGN	r0	t18
	goto	.L316

.L316:
	func_end:	revert

arrCopy:
	param	src
	alloca	#4	src
	param	target
	alloca	#4	target
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L354:
	load	i	t1
	load	n	t2
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L355
	goto	.L356

.L355:
	load	src	t4
	exp_arroff	t5,	[t4, t1]
	load	target	t6
	arroff_exp	t5,	[t6, t1]
	load	i	t7
	ASSIGN	t8	#1
	add	t7	t8	t9
	ASSIGN	i	t9
	goto	.L354

.L356:
	ASSIGN	t10	#0
	ASSIGN	r0	t10
	goto	.L350

.L350:
	func_end:	arrCopy

calSum:
	param	arr
	alloca	#4	arr
	param	stride
	alloca	#4	stride
	alloca	#4	sum
	ASSIGN	t0	#0
	ASSIGN	sum	t0
	alloca	#4	i
	ASSIGN	t1	#0
	ASSIGN	i	t1

.L376:
	load	i	t2
	load	n	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L377
	goto	.L378

.L377:
	load	sum	t7
	load	arr	t5
	exp_arroff	t6,	[t5, t2]
	add	t7	t6	t8
	ASSIGN	sum	t8
	load	i	t9
	load	stride	t10
	mod	t9	t10	t11
	load	stride	t12
	ASSIGN	t13	#1
	sub	t12	t13	t14
	neq	t11	t14	t15
	goto_eq	t15	#1	.L388
	goto	.L389

.L388:
	ASSIGN	t16	#0
	load	arr	t17
	arroff_exp	t16,	[t17, t9]
	goto	.L390

.L389:
	load	i	t18
	load	sum	t19
	load	arr	t20
	arroff_exp	t19,	[t20, t18]
	ASSIGN	t21	#0
	ASSIGN	sum	t21

.L390:
	load	i	t22
	ASSIGN	t23	#1
	add	t22	t23	t24
	ASSIGN	i	t24
	goto	.L376

.L378:
	ASSIGN	t25	#0
	ASSIGN	r0	t25
	goto	.L369

.L369:
	func_end:	calSum

avgPooling:
	param	arr
	alloca	#4	arr
	param	stride
	alloca	#4	stride
	alloca	#4	sum
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0
	ASSIGN	t1	#0
	ASSIGN	sum	t1
	alloca	#4	lastnum

.L422:
	load	i	t2
	load	n	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L423
	goto	.L424

.L423:
	load	i	t8
	load	stride	t5
	ASSIGN	t6	#1
	sub	t5	t6	t7
	jlt	t8	t7	t9
	goto_eq	t9	#1	.L428
	goto	.L429

.L428:
	load	sum	t12
	load	arr	t10
	exp_arroff	t11,	[t10, t8]
	add	t12	t11	t13
	ASSIGN	sum	t13
	goto	.L430

.L429:
	load	i	t17
	load	stride	t14
	ASSIGN	t15	#1
	sub	t14	t15	t16
	eq	t17	t16	t18
	goto_eq	t18	#1	.L443
	goto	.L444

.L443:
	ASSIGN	t19	#0
	load	arr	t20
	exp_arroff	t21,	[t20, t19]
	ASSIGN	lastnum	t21
	ASSIGN	t22	#0
	load	sum	t23
	load	stride	t24
	div	t23	t24	t25
	load	arr	t26
	arroff_exp	t25,	[t26, t22]
	goto	.L445

.L444:
	load	sum	t30
	load	i	t27
	load	arr	t28
	exp_arroff	t29,	[t28, t27]
	add	t30	t29	t31
	load	lastnum	t32
	sub	t31	t32	t33
	ASSIGN	sum	t33
	load	stride	t34
	sub	t27	t34	t35
	ASSIGN	t36	#1
	add	t35	t36	t37
	load	arr	t38
	exp_arroff	t39,	[t38, t37]
	ASSIGN	lastnum	t39
	sub	t27	t34	t40
	ASSIGN	t41	#1
	add	t40	t41	t42
	load	sum	t43
	load	stride	t44
	div	t43	t44	t45
	load	arr	t46
	arroff_exp	t45,	[t46, t42]

.L445:

.L430:
	load	i	t47
	ASSIGN	t48	#1
	add	t47	t48	t49
	ASSIGN	i	t49
	goto	.L422

.L424:
	load	n	t50
	load	stride	t51
	sub	t50	t51	t52
	ASSIGN	t53	#1
	add	t52	t53	t54
	ASSIGN	i	t54

.L506:
	load	i	t55
	load	n	t56
	jlt	t55	t56	t57
	goto_eq	t57	#1	.L507
	goto	.L508

.L507:
	ASSIGN	t58	#0
	load	arr	t59
	arroff_exp	t58,	[t59, t55]
	load	i	t60
	ASSIGN	t61	#1
	add	t60	t61	t62
	ASSIGN	i	t62
	goto	.L506

.L508:
	ASSIGN	t63	#0
	ASSIGN	r0	t63
	goto	.L415

.L415:
	func_end:	avgPooling

main:
	ASSIGN	t0	#32
	ASSIGN	n	t0
	alloca	#128	arr
	alloca	#128	result
	ASSIGN	t1	#0
	ASSIGN	t2	#7
	arroff_exp	t2,	[arr, t1]
	ASSIGN	t3	#1
	ASSIGN	t4	#23
	arroff_exp	t4,	[arr, t3]
	ASSIGN	t5	#2
	ASSIGN	t6	#89
	arroff_exp	t6,	[arr, t5]
	ASSIGN	t7	#3
	ASSIGN	t8	#26
	arroff_exp	t8,	[arr, t7]
	ASSIGN	t9	#4
	ASSIGN	t10	#282
	arroff_exp	t10,	[arr, t9]
	ASSIGN	t11	#5
	ASSIGN	t12	#254
	arroff_exp	t12,	[arr, t11]
	ASSIGN	t13	#6
	ASSIGN	t14	#27
	arroff_exp	t14,	[arr, t13]
	ASSIGN	t15	#7
	ASSIGN	t16	#5
	arroff_exp	t16,	[arr, t15]
	ASSIGN	t17	#8
	ASSIGN	t18	#83
	arroff_exp	t18,	[arr, t17]
	ASSIGN	t19	#9
	ASSIGN	t20	#273
	arroff_exp	t20,	[arr, t19]
	ASSIGN	t21	#10
	ASSIGN	t22	#574
	arroff_exp	t22,	[arr, t21]
	ASSIGN	t23	#11
	ASSIGN	t24	#905
	arroff_exp	t24,	[arr, t23]
	ASSIGN	t25	#12
	ASSIGN	t26	#354
	arroff_exp	t26,	[arr, t25]
	ASSIGN	t27	#13
	ASSIGN	t28	#657
	arroff_exp	t28,	[arr, t27]
	ASSIGN	t29	#14
	ASSIGN	t30	#935
	arroff_exp	t30,	[arr, t29]
	ASSIGN	t31	#15
	ASSIGN	t32	#264
	arroff_exp	t32,	[arr, t31]
	ASSIGN	t33	#16
	ASSIGN	t34	#639
	arroff_exp	t34,	[arr, t33]
	ASSIGN	t35	#17
	ASSIGN	t36	#459
	arroff_exp	t36,	[arr, t35]
	ASSIGN	t37	#18
	ASSIGN	t38	#29
	arroff_exp	t38,	[arr, t37]
	ASSIGN	t39	#19
	ASSIGN	t40	#68
	arroff_exp	t40,	[arr, t39]
	ASSIGN	t41	#20
	ASSIGN	t42	#929
	arroff_exp	t42,	[arr, t41]
	ASSIGN	t43	#21
	ASSIGN	t44	#756
	arroff_exp	t44,	[arr, t43]
	ASSIGN	t45	#22
	ASSIGN	t46	#452
	arroff_exp	t46,	[arr, t45]
	ASSIGN	t47	#23
	ASSIGN	t48	#279
	arroff_exp	t48,	[arr, t47]
	ASSIGN	t49	#24
	ASSIGN	t50	#58
	arroff_exp	t50,	[arr, t49]
	ASSIGN	t51	#25
	ASSIGN	t52	#87
	arroff_exp	t52,	[arr, t51]
	ASSIGN	t53	#26
	ASSIGN	t54	#96
	arroff_exp	t54,	[arr, t53]
	ASSIGN	t55	#27
	ASSIGN	t56	#36
	arroff_exp	t56,	[arr, t55]
	ASSIGN	t57	#28
	ASSIGN	t58	#39
	arroff_exp	t58,	[arr, t57]
	ASSIGN	t59	#29
	ASSIGN	t60	#28
	arroff_exp	t60,	[arr, t59]
	ASSIGN	t61	#30
	ASSIGN	t62	#1
	arroff_exp	t62,	[arr, t61]
	ASSIGN	t63	#31
	ASSIGN	t64	#290
	arroff_exp	t64,	[arr, t63]
	alloca	#4	t
	ASSIGN	t65	#-140
	ASSIGN	t66	#-268
	arg	t65
	arg	t66
	CALL	arrCopy	t67
	ASSIGN	t	t67
	ASSIGN	t68	#-268
	arg	t68
	CALL	revert	t69
	ASSIGN	t	t69
	alloca	#4	i
	ASSIGN	t70	#0
	ASSIGN	i	t70

.L630:
	load	i	t71
	ASSIGN	t72	#32
	jlt	t71	t72	t73
	goto_eq	t73	#1	.L631
	goto	.L632

.L631:
	exp_arroff	t74,	[result, t71]
	ASSIGN	t	t74
	load	t	t75
	arg	t75
	call_void	putint
	load	i	t76
	ASSIGN	t77	#1
	add	t76	t77	t78
	ASSIGN	i	t78
	goto	.L630

.L632:
	ASSIGN	t79	#-268
	arg	t79
	CALL	bubblesort	t80
	ASSIGN	t	t80
	ASSIGN	t81	#0
	ASSIGN	i	t81

.L651:
	load	i	t82
	ASSIGN	t83	#32
	jlt	t82	t83	t84
	goto_eq	t84	#1	.L652
	goto	.L653

.L652:
	exp_arroff	t85,	[result, t82]
	ASSIGN	t	t85
	load	t	t86
	arg	t86
	call_void	putint
	load	i	t87
	ASSIGN	t88	#1
	add	t87	t88	t89
	ASSIGN	i	t89
	goto	.L651

.L653:
	ASSIGN	t90	#-268
	arg	t90
	CALL	getMid	t91
	ASSIGN	t	t91
	load	t	t92
	arg	t92
	call_void	putint
	ASSIGN	t93	#-268
	arg	t93
	CALL	getMost	t94
	ASSIGN	t	t94
	arg	t94
	call_void	putint
	ASSIGN	t95	#-140
	ASSIGN	t96	#-268
	arg	t95
	arg	t96
	CALL	arrCopy	t97
	ASSIGN	t	t97
	ASSIGN	t98	#-268
	arg	t98
	CALL	bubblesort	t99
	ASSIGN	t	t99
	ASSIGN	t100	#0
	ASSIGN	i	t100

.L681:
	load	i	t101
	ASSIGN	t102	#32
	jlt	t101	t102	t103
	goto_eq	t103	#1	.L682
	goto	.L683

.L682:
	exp_arroff	t104,	[result, t101]
	ASSIGN	t	t104
	load	t	t105
	arg	t105
	call_void	putint
	load	i	t106
	ASSIGN	t107	#1
	add	t106	t107	t108
	ASSIGN	i	t108
	goto	.L681

.L683:
	ASSIGN	t109	#-140
	ASSIGN	t110	#-268
	arg	t109
	arg	t110
	CALL	arrCopy	t111
	ASSIGN	t	t111
	ASSIGN	t112	#-268
	arg	t112
	CALL	insertsort	t113
	ASSIGN	t	t113
	ASSIGN	t114	#0
	ASSIGN	i	t114

.L705:
	load	i	t115
	ASSIGN	t116	#32
	jlt	t115	t116	t117
	goto_eq	t117	#1	.L706
	goto	.L707

.L706:
	exp_arroff	t118,	[result, t115]
	ASSIGN	t	t118
	load	t	t119
	arg	t119
	call_void	putint
	load	i	t120
	ASSIGN	t121	#1
	add	t120	t121	t122
	ASSIGN	i	t122
	goto	.L705

.L707:
	ASSIGN	t123	#-140
	ASSIGN	t124	#-268
	arg	t123
	arg	t124
	CALL	arrCopy	t125
	ASSIGN	t	t125
	ASSIGN	t126	#0
	ASSIGN	i	t126
	ASSIGN	t127	#31
	ASSIGN	t	t127
	ASSIGN	t128	#-268
	load	i	t129
	load	t	t130
	arg	t128
	arg	t129
	arg	t130
	CALL	QuickSort	t131
	ASSIGN	t	t131

.L732:
	load	i	t132
	ASSIGN	t133	#32
	jlt	t132	t133	t134
	goto_eq	t134	#1	.L733
	goto	.L734

.L733:
	exp_arroff	t135,	[result, t132]
	ASSIGN	t	t135
	load	t	t136
	arg	t136
	call_void	putint
	load	i	t137
	ASSIGN	t138	#1
	add	t137	t138	t139
	ASSIGN	i	t139
	goto	.L732

.L734:
	ASSIGN	t140	#-140
	ASSIGN	t141	#-268
	arg	t140
	arg	t141
	CALL	arrCopy	t142
	ASSIGN	t	t142
	ASSIGN	t143	#-268
	ASSIGN	t144	#4
	arg	t143
	arg	t144
	CALL	calSum	t145
	ASSIGN	t	t145
	ASSIGN	t146	#0
	ASSIGN	i	t146

.L756:
	load	i	t147
	ASSIGN	t148	#32
	jlt	t147	t148	t149
	goto_eq	t149	#1	.L757
	goto	.L758

.L757:
	exp_arroff	t150,	[result, t147]
	ASSIGN	t	t150
	load	t	t151
	arg	t151
	call_void	putint
	load	i	t152
	ASSIGN	t153	#1
	add	t152	t153	t154
	ASSIGN	i	t154
	goto	.L756

.L758:
	ASSIGN	t155	#-140
	ASSIGN	t156	#-268
	arg	t155
	arg	t156
	CALL	arrCopy	t157
	ASSIGN	t	t157
	ASSIGN	t158	#-268
	ASSIGN	t159	#3
	arg	t158
	arg	t159
	CALL	avgPooling	t160
	ASSIGN	t	t160
	ASSIGN	t161	#0
	ASSIGN	i	t161

.L780:
	load	i	t162
	ASSIGN	t163	#32
	jlt	t162	t163	t164
	goto_eq	t164	#1	.L781
	goto	.L782

.L781:
	exp_arroff	t165,	[result, t162]
	ASSIGN	t	t165
	load	t	t166
	arg	t166
	call_void	putint
	load	i	t167
	ASSIGN	t168	#1
	add	t167	t168	t169
	ASSIGN	i	t169
	goto	.L780

.L782:
	ASSIGN	t170	#0
	ASSIGN	r0	t170
	goto	.L521

.L521:
	func_end:	main
