	alloca	#4	n

bubblesort:
	param	arr
	alloca	#4	arr
	alloca	#4	i
	alloca	#4	j
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L5:
	load	i	t4
	load	n	t1
	ASSIGN	t2	#1
	sub	t1	t2	t3
	jlt	t4	t3	t5
	goto_eq	t5	#1	.L6
	goto	.L7

.L6:
	ASSIGN	t6	#0
	ASSIGN	j	t6

.L17:
	load	j	t12
	load	n	t7
	load	i	t8
	sub	t7	t8	t9
	ASSIGN	t10	#1
	sub	t9	t10	t11
	jlt	t12	t11	t13
	goto_eq	t13	#1	.L18
	goto	.L19

.L18:
	load	j	t14
	load	arr	t15
	exp_arroff	t16,	[t15, t14]
	load	j	t17
	ASSIGN	t18	#1
	add	t17	t18	t19
	load	arr	t20
	exp_arroff	t21,	[t20, t19]
	jgt	t16	t21	t22
	goto_eq	t22	#1	.L29
	goto	.L30

.L29:
	alloca	#4	tmp
	load	j	t23
	ASSIGN	t24	#1
	add	t23	t24	t25
	load	arr	t26
	exp_arroff	t27,	[t26, t25]
	ASSIGN	tmp	t27
	load	j	t28
	load	arr	t29
	exp_arroff	t30,	[t29, t28]
	load	j	t31
	ASSIGN	t32	#1
	add	t31	t32	t33
	load	arr	t34
	arroff_exp	t30,	[t34, t33]
	load	tmp	t36
	load	j	t35
	load	arr	t37
	arroff_exp	t36,	[t37, t35]

.L30:
	load	j	t38
	ASSIGN	t39	#1
	add	t38	t39	t40
	ASSIGN	j	t40
	goto	.L17

.L19:
	load	i	t41
	ASSIGN	t42	#1
	add	t41	t42	t43
	ASSIGN	i	t43
	goto	.L5

.L7:
	ASSIGN	t44	#0
	ASSIGN	r0	t44
	goto	.L1

.L1:
	func_end:	bubblesort

insertsort:
	param	a
	alloca	#4	a
	alloca	#4	i
	ASSIGN	t0	#1
	ASSIGN	i	t0

.L68:
	load	i	t1
	load	n	t2
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L69
	goto	.L70

.L69:
	alloca	#4	temp
	load	i	t4
	load	a	t5
	exp_arroff	t6,	[t5, t4]
	ASSIGN	temp	t6
	alloca	#4	j
	load	i	t7
	ASSIGN	t8	#1
	sub	t7	t8	t9
	ASSIGN	j	t9

.L83:
	load	j	t10
	ASSIGN	t11	#-1
	jgt	t10	t11	t12
	goto_eq	t12	#1	.L87
	goto	.L86

.L87:
	load	temp	t16
	load	j	t13
	load	a	t14
	exp_arroff	t15,	[t14, t13]
	jlt	t16	t15	t17

.L88:

.L86:
	goto_eq	t12	#1	.L84
	goto	.L85

.L84:
	load	j	t19
	load	a	t20
	exp_arroff	t21,	[t20, t19]
	load	j	t22
	ASSIGN	t23	#1
	add	t22	t23	t24
	load	a	t25
	arroff_exp	t21,	[t25, t24]
	load	j	t26
	ASSIGN	t27	#1
	sub	t26	t27	t28
	ASSIGN	j	t28
	goto	.L83

.L85:
	load	temp	t32
	load	j	t29
	ASSIGN	t30	#1
	add	t29	t30	t31
	load	a	t33
	arroff_exp	t32,	[t33, t31]
	load	i	t34
	ASSIGN	t35	#1
	add	t34	t35	t36
	ASSIGN	i	t36
	goto	.L68

.L70:
	ASSIGN	t37	#0
	ASSIGN	r0	t37
	goto	.L64

.L64:
	func_end:	insertsort

QuickSort:
	param	arr
	alloca	#4	arr
	param	low
	alloca	#4	low
	param	high
	alloca	#4	high
	load	low	t0
	load	high	t1
	jlt	t0	t1	t2
	goto_eq	t2	#1	.L120
	goto	.L121

.L120:
	alloca	#4	i
	ASSIGN	i	t0
	alloca	#4	j
	ASSIGN	j	t1
	alloca	#4	k
	load	arr	t3
	exp_arroff	t4,	[t3, t0]
	ASSIGN	k	t4

.L134:
	load	i	t5
	load	j	t6
	jlt	t5	t6	t7
	goto_eq	t7	#1	.L135
	goto	.L136

.L135:

.L140:
	load	i	t8
	load	j	t9
	jlt	t8	t9	t10
	goto_eq	t10	#1	.L144
	goto	.L143

.L144:
	load	j	t11
	load	arr	t12
	exp_arroff	t13,	[t12, t11]
	load	k	t14
	ASSIGN	t15	#1
	sub	t14	t15	t16
	jgt	t13	t16	t17

.L145:

.L143:
	goto_eq	t10	#1	.L141
	goto	.L142

.L141:
	load	j	t19
	ASSIGN	t20	#1
	sub	t19	t20	t21
	ASSIGN	j	t21
	goto	.L140

.L142:
	load	i	t22
	load	j	t23
	jlt	t22	t23	t24
	goto_eq	t24	#1	.L161
	goto	.L162

.L161:
	load	j	t25
	load	arr	t26
	exp_arroff	t27,	[t26, t25]
	load	i	t28
	load	arr	t29
	arroff_exp	t27,	[t29, t28]
	load	i	t30
	ASSIGN	t31	#1
	add	t30	t31	t32
	ASSIGN	i	t32

.L162:

.L175:
	load	i	t33
	load	j	t34
	jlt	t33	t34	t35
	goto_eq	t35	#1	.L179
	goto	.L178

.L179:
	load	i	t36
	load	arr	t37
	exp_arroff	t38,	[t37, t36]
	load	k	t39
	jlt	t38	t39	t40

.L180:

.L178:
	goto_eq	t35	#1	.L176
	goto	.L177

.L176:
	load	i	t42
	ASSIGN	t43	#1
	add	t42	t43	t44
	ASSIGN	i	t44
	goto	.L175

.L177:
	load	i	t45
	load	j	t46
	jlt	t45	t46	t47
	goto_eq	t47	#1	.L193
	goto	.L194

.L193:
	load	i	t48
	load	arr	t49
	exp_arroff	t50,	[t49, t48]
	load	j	t51
	load	arr	t52
	arroff_exp	t50,	[t52, t51]
	load	j	t53
	ASSIGN	t54	#1
	sub	t53	t54	t55
	ASSIGN	j	t55

.L194:
	goto	.L134

.L136:
	load	k	t57
	load	i	t56
	load	arr	t58
	arroff_exp	t57,	[t58, t56]
	alloca	#4	tmp
	ASSIGN	t59	#1
	sub	t56	t59	t60
	ASSIGN	tmp	t60
	load	arr	t61
	load	tmp	t62
	arg	t61
	arg	t0
	arg	t62
	CALL	QuickSort	t63
	ASSIGN	tmp	t63
	ASSIGN	t64	#1
	add	t56	t64	t65
	ASSIGN	tmp	t65
	load	arr	t66
	arg	t66
	arg	t65
	arg	t1
	CALL	QuickSort	t67
	ASSIGN	tmp	t67

.L121:
	ASSIGN	t68	#0
	ASSIGN	r0	t68
	goto	.L119

.L119:
	func_end:	QuickSort

getMid:
	param	arr
	alloca	#4	arr
	alloca	#4	mid
	load	n	t0
	ASSIGN	t1	#2
	mod	t0	t1	t2
	ASSIGN	t3	#0
	eq	t2	t3	t4
	goto_eq	t4	#1	.L229
	goto	.L230

.L229:
	ASSIGN	t5	#2
	div	t0	t5	t6
	ASSIGN	mid	t6
	load	mid	t7
	load	arr	t8
	exp_arroff	t9,	[t8, t7]
	ASSIGN	t10	#1
	sub	t7	t10	t11
	load	arr	t12
	exp_arroff	t13,	[t12, t11]
	add	t9	t13	t14
	ASSIGN	t15	#2
	div	t14	t15	t16
	ASSIGN	r0	t16
	goto	.L228
	goto	.L231

.L230:
	load	n	t17
	ASSIGN	t18	#2
	div	t17	t18	t19
	ASSIGN	mid	t19
	load	mid	t20
	load	arr	t21
	exp_arroff	t22,	[t21, t20]
	ASSIGN	r0	t22
	goto	.L228

.L231:

.L228:
	func_end:	getMid

getMost:
	param	arr
	alloca	#4	arr
	alloca	#4000	count
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L263:
	load	i	t1
	ASSIGN	t2	#1000
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L264
	goto	.L265

.L264:
	ASSIGN	t5	#0
	load	i	t4
	arroff_exp	t5,	[count, t4]
	load	i	t6
	ASSIGN	t7	#1
	add	t6	t7	t8
	ASSIGN	i	t8
	goto	.L263

.L265:
	ASSIGN	t9	#0
	ASSIGN	i	t9
	alloca	#4	max
	alloca	#4	number
	ASSIGN	t10	#0
	ASSIGN	max	t10

.L284:
	load	i	t11
	load	n	t12
	jlt	t11	t12	t13
	goto_eq	t13	#1	.L285
	goto	.L286

.L285:
	alloca	#4	num
	load	i	t14
	load	arr	t15
	exp_arroff	t16,	[t15, t14]
	ASSIGN	num	t16
	load	num	t17
	exp_arroff	t18,	[count, t17]
	ASSIGN	t19	#1
	add	t18	t19	t20
	load	num	t21
	arroff_exp	t20,	[count, t21]
	load	num	t22
	exp_arroff	t23,	[count, t22]
	load	max	t24
	jgt	t23	t24	t25
	goto_eq	t25	#1	.L299
	goto	.L300

.L299:
	load	num	t26
	exp_arroff	t27,	[count, t26]
	ASSIGN	max	t27
	load	num	t28
	ASSIGN	number	t28

.L300:
	load	i	t29
	ASSIGN	t30	#1
	add	t29	t30	t31
	ASSIGN	i	t31
	goto	.L284

.L286:
	load	number	t32
	ASSIGN	r0	t32
	goto	.L259

.L259:
	func_end:	getMost

revert:
	param	arr
	alloca	#4	arr
	alloca	#4	temp
	alloca	#4	i
	alloca	#4	j
	ASSIGN	t0	#0
	ASSIGN	i	t0
	ASSIGN	t1	#0
	ASSIGN	j	t1

.L323:
	load	i	t2
	load	j	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L324
	goto	.L325

.L324:
	load	i	t5
	load	arr	t6
	exp_arroff	t7,	[t6, t5]
	ASSIGN	temp	t7
	load	j	t8
	load	arr	t9
	exp_arroff	t10,	[t9, t8]
	load	i	t11
	load	arr	t12
	arroff_exp	t10,	[t12, t11]
	load	temp	t14
	load	j	t13
	load	arr	t15
	arroff_exp	t14,	[t15, t13]
	load	i	t16
	ASSIGN	t17	#1
	add	t16	t17	t18
	ASSIGN	i	t18
	load	j	t19
	ASSIGN	t20	#1
	sub	t19	t20	t21
	ASSIGN	j	t21
	goto	.L323

.L325:
	ASSIGN	t22	#0
	ASSIGN	r0	t22
	goto	.L316

.L316:
	func_end:	revert

arrCopy:
	param	src
	alloca	#4	src
	param	target
	alloca	#4	target
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L354:
	load	i	t1
	load	n	t2
	jlt	t1	t2	t3
	goto_eq	t3	#1	.L355
	goto	.L356

.L355:
	load	i	t4
	load	src	t5
	exp_arroff	t6,	[t5, t4]
	load	i	t7
	load	target	t8
	arroff_exp	t6,	[t8, t7]
	load	i	t9
	ASSIGN	t10	#1
	add	t9	t10	t11
	ASSIGN	i	t11
	goto	.L354

.L356:
	ASSIGN	t12	#0
	ASSIGN	r0	t12
	goto	.L350

.L350:
	func_end:	arrCopy

calSum:
	param	arr
	alloca	#4	arr
	param	stride
	alloca	#4	stride
	alloca	#4	sum
	ASSIGN	t0	#0
	ASSIGN	sum	t0
	alloca	#4	i
	ASSIGN	t1	#0
	ASSIGN	i	t1

.L376:
	load	i	t2
	load	n	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L377
	goto	.L378

.L377:
	load	sum	t8
	load	i	t5
	load	arr	t6
	exp_arroff	t7,	[t6, t5]
	add	t8	t7	t9
	ASSIGN	sum	t9
	load	i	t10
	load	stride	t11
	mod	t10	t11	t12
	load	stride	t13
	ASSIGN	t14	#1
	sub	t13	t14	t15
	neq	t12	t15	t16
	goto_eq	t16	#1	.L388
	goto	.L389

.L388:
	ASSIGN	t18	#0
	load	i	t17
	load	arr	t19
	arroff_exp	t18,	[t19, t17]
	goto	.L390

.L389:
	load	sum	t21
	load	i	t20
	load	arr	t22
	arroff_exp	t21,	[t22, t20]
	ASSIGN	t23	#0
	ASSIGN	sum	t23

.L390:
	load	i	t24
	ASSIGN	t25	#1
	add	t24	t25	t26
	ASSIGN	i	t26
	goto	.L376

.L378:
	ASSIGN	t27	#0
	ASSIGN	r0	t27
	goto	.L369

.L369:
	func_end:	calSum

avgPooling:
	param	arr
	alloca	#4	arr
	param	stride
	alloca	#4	stride
	alloca	#4	sum
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0
	ASSIGN	t1	#0
	ASSIGN	sum	t1
	alloca	#4	lastnum

.L422:
	load	i	t2
	load	n	t3
	jlt	t2	t3	t4
	goto_eq	t4	#1	.L423
	goto	.L424

.L423:
	load	i	t8
	load	stride	t5
	ASSIGN	t6	#1
	sub	t5	t6	t7
	jlt	t8	t7	t9
	goto_eq	t9	#1	.L428
	goto	.L429

.L428:
	load	sum	t13
	load	i	t10
	load	arr	t11
	exp_arroff	t12,	[t11, t10]
	add	t13	t12	t14
	ASSIGN	sum	t14
	goto	.L430

.L429:
	load	i	t18
	load	stride	t15
	ASSIGN	t16	#1
	sub	t15	t16	t17
	eq	t18	t17	t19
	goto_eq	t19	#1	.L443
	goto	.L444

.L443:
	ASSIGN	t20	#0
	load	arr	t21
	exp_arroff	t22,	[t21, t20]
	ASSIGN	lastnum	t22
	load	sum	t23
	load	stride	t24
	div	t23	t24	t25
	ASSIGN	t26	#0
	load	arr	t27
	arroff_exp	t25,	[t27, t26]
	goto	.L445

.L444:
	load	sum	t31
	load	i	t28
	load	arr	t29
	exp_arroff	t30,	[t29, t28]
	add	t31	t30	t32
	load	lastnum	t33
	sub	t32	t33	t34
	ASSIGN	sum	t34
	load	i	t35
	load	stride	t36
	sub	t35	t36	t37
	ASSIGN	t38	#1
	add	t37	t38	t39
	load	arr	t40
	exp_arroff	t41,	[t40, t39]
	ASSIGN	lastnum	t41
	load	sum	t42
	load	stride	t43
	div	t42	t43	t44
	load	i	t45
	load	stride	t46
	sub	t45	t46	t47
	ASSIGN	t48	#1
	add	t47	t48	t49
	load	arr	t50
	arroff_exp	t44,	[t50, t49]

.L445:

.L430:
	load	i	t51
	ASSIGN	t52	#1
	add	t51	t52	t53
	ASSIGN	i	t53
	goto	.L422

.L424:
	load	n	t54
	load	stride	t55
	sub	t54	t55	t56
	ASSIGN	t57	#1
	add	t56	t57	t58
	ASSIGN	i	t58

.L506:
	load	i	t59
	load	n	t60
	jlt	t59	t60	t61
	goto_eq	t61	#1	.L507
	goto	.L508

.L507:
	ASSIGN	t63	#0
	load	i	t62
	load	arr	t64
	arroff_exp	t63,	[t64, t62]
	load	i	t65
	ASSIGN	t66	#1
	add	t65	t66	t67
	ASSIGN	i	t67
	goto	.L506

.L508:
	ASSIGN	t68	#0
	ASSIGN	r0	t68
	goto	.L415

.L415:
	func_end:	avgPooling

main:
	ASSIGN	t0	#32
	ASSIGN	n	t0
	alloca	#128	arr
	alloca	#128	result
	ASSIGN	t2	#7
	ASSIGN	t1	#0
	arroff_exp	t2,	[arr, t1]
	ASSIGN	t4	#23
	ASSIGN	t3	#1
	arroff_exp	t4,	[arr, t3]
	ASSIGN	t6	#89
	ASSIGN	t5	#2
	arroff_exp	t6,	[arr, t5]
	ASSIGN	t8	#26
	ASSIGN	t7	#3
	arroff_exp	t8,	[arr, t7]
	ASSIGN	t10	#282
	ASSIGN	t9	#4
	arroff_exp	t10,	[arr, t9]
	ASSIGN	t12	#254
	ASSIGN	t11	#5
	arroff_exp	t12,	[arr, t11]
	ASSIGN	t14	#27
	ASSIGN	t13	#6
	arroff_exp	t14,	[arr, t13]
	ASSIGN	t16	#5
	ASSIGN	t15	#7
	arroff_exp	t16,	[arr, t15]
	ASSIGN	t18	#83
	ASSIGN	t17	#8
	arroff_exp	t18,	[arr, t17]
	ASSIGN	t20	#273
	ASSIGN	t19	#9
	arroff_exp	t20,	[arr, t19]
	ASSIGN	t22	#574
	ASSIGN	t21	#10
	arroff_exp	t22,	[arr, t21]
	ASSIGN	t24	#905
	ASSIGN	t23	#11
	arroff_exp	t24,	[arr, t23]
	ASSIGN	t26	#354
	ASSIGN	t25	#12
	arroff_exp	t26,	[arr, t25]
	ASSIGN	t28	#657
	ASSIGN	t27	#13
	arroff_exp	t28,	[arr, t27]
	ASSIGN	t30	#935
	ASSIGN	t29	#14
	arroff_exp	t30,	[arr, t29]
	ASSIGN	t32	#264
	ASSIGN	t31	#15
	arroff_exp	t32,	[arr, t31]
	ASSIGN	t34	#639
	ASSIGN	t33	#16
	arroff_exp	t34,	[arr, t33]
	ASSIGN	t36	#459
	ASSIGN	t35	#17
	arroff_exp	t36,	[arr, t35]
	ASSIGN	t38	#29
	ASSIGN	t37	#18
	arroff_exp	t38,	[arr, t37]
	ASSIGN	t40	#68
	ASSIGN	t39	#19
	arroff_exp	t40,	[arr, t39]
	ASSIGN	t42	#929
	ASSIGN	t41	#20
	arroff_exp	t42,	[arr, t41]
	ASSIGN	t44	#756
	ASSIGN	t43	#21
	arroff_exp	t44,	[arr, t43]
	ASSIGN	t46	#452
	ASSIGN	t45	#22
	arroff_exp	t46,	[arr, t45]
	ASSIGN	t48	#279
	ASSIGN	t47	#23
	arroff_exp	t48,	[arr, t47]
	ASSIGN	t50	#58
	ASSIGN	t49	#24
	arroff_exp	t50,	[arr, t49]
	ASSIGN	t52	#87
	ASSIGN	t51	#25
	arroff_exp	t52,	[arr, t51]
	ASSIGN	t54	#96
	ASSIGN	t53	#26
	arroff_exp	t54,	[arr, t53]
	ASSIGN	t56	#36
	ASSIGN	t55	#27
	arroff_exp	t56,	[arr, t55]
	ASSIGN	t58	#39
	ASSIGN	t57	#28
	arroff_exp	t58,	[arr, t57]
	ASSIGN	t60	#28
	ASSIGN	t59	#29
	arroff_exp	t60,	[arr, t59]
	ASSIGN	t62	#1
	ASSIGN	t61	#30
	arroff_exp	t62,	[arr, t61]
	ASSIGN	t64	#290
	ASSIGN	t63	#31
	arroff_exp	t64,	[arr, t63]
	alloca	#4	t
	ASSIGN	t65	#-140
	add	t65	fp	t66
	ASSIGN	t67	#-268
	add	t67	fp	t68
	arg	t66
	arg	t68
	CALL	arrCopy	t69
	ASSIGN	t	t69
	ASSIGN	t70	#-268
	add	t70	fp	t71
	arg	t71
	CALL	revert	t72
	ASSIGN	t	t72
	alloca	#4	i
	ASSIGN	t73	#0
	ASSIGN	i	t73

.L630:
	load	i	t74
	ASSIGN	t75	#32
	jlt	t74	t75	t76
	goto_eq	t76	#1	.L631
	goto	.L632

.L631:
	load	i	t77
	exp_arroff	t78,	[result, t77]
	ASSIGN	t	t78
	load	t	t79
	arg	t79
	call_void	putint
	load	i	t80
	ASSIGN	t81	#1
	add	t80	t81	t82
	ASSIGN	i	t82
	goto	.L630

.L632:
	ASSIGN	t83	#-268
	add	t83	fp	t84
	arg	t84
	CALL	bubblesort	t85
	ASSIGN	t	t85
	ASSIGN	t86	#0
	ASSIGN	i	t86

.L651:
	load	i	t87
	ASSIGN	t88	#32
	jlt	t87	t88	t89
	goto_eq	t89	#1	.L652
	goto	.L653

.L652:
	load	i	t90
	exp_arroff	t91,	[result, t90]
	ASSIGN	t	t91
	load	t	t92
	arg	t92
	call_void	putint
	load	i	t93
	ASSIGN	t94	#1
	add	t93	t94	t95
	ASSIGN	i	t95
	goto	.L651

.L653:
	ASSIGN	t96	#-268
	add	t96	fp	t97
	arg	t97
	CALL	getMid	t98
	ASSIGN	t	t98
	load	t	t99
	arg	t99
	call_void	putint
	ASSIGN	t100	#-268
	add	t100	fp	t101
	arg	t101
	CALL	getMost	t102
	ASSIGN	t	t102
	arg	t102
	call_void	putint
	ASSIGN	t103	#-140
	add	t103	fp	t104
	ASSIGN	t105	#-268
	add	t105	fp	t106
	arg	t104
	arg	t106
	CALL	arrCopy	t107
	ASSIGN	t	t107
	ASSIGN	t108	#-268
	add	t108	fp	t109
	arg	t109
	CALL	bubblesort	t110
	ASSIGN	t	t110
	ASSIGN	t111	#0
	ASSIGN	i	t111

.L681:
	load	i	t112
	ASSIGN	t113	#32
	jlt	t112	t113	t114
	goto_eq	t114	#1	.L682
	goto	.L683

.L682:
	load	i	t115
	exp_arroff	t116,	[result, t115]
	ASSIGN	t	t116
	load	t	t117
	arg	t117
	call_void	putint
	load	i	t118
	ASSIGN	t119	#1
	add	t118	t119	t120
	ASSIGN	i	t120
	goto	.L681

.L683:
	ASSIGN	t121	#-140
	add	t121	fp	t122
	ASSIGN	t123	#-268
	add	t123	fp	t124
	arg	t122
	arg	t124
	CALL	arrCopy	t125
	ASSIGN	t	t125
	ASSIGN	t126	#-268
	add	t126	fp	t127
	arg	t127
	CALL	insertsort	t128
	ASSIGN	t	t128
	ASSIGN	t129	#0
	ASSIGN	i	t129

.L705:
	load	i	t130
	ASSIGN	t131	#32
	jlt	t130	t131	t132
	goto_eq	t132	#1	.L706
	goto	.L707

.L706:
	load	i	t133
	exp_arroff	t134,	[result, t133]
	ASSIGN	t	t134
	load	t	t135
	arg	t135
	call_void	putint
	load	i	t136
	ASSIGN	t137	#1
	add	t136	t137	t138
	ASSIGN	i	t138
	goto	.L705

.L707:
	ASSIGN	t139	#-140
	add	t139	fp	t140
	ASSIGN	t141	#-268
	add	t141	fp	t142
	arg	t140
	arg	t142
	CALL	arrCopy	t143
	ASSIGN	t	t143
	ASSIGN	t144	#0
	ASSIGN	i	t144
	ASSIGN	t145	#31
	ASSIGN	t	t145
	ASSIGN	t146	#-268
	add	t146	fp	t147
	load	i	t148
	load	t	t149
	arg	t147
	arg	t148
	arg	t149
	CALL	QuickSort	t150
	ASSIGN	t	t150

.L732:
	load	i	t151
	ASSIGN	t152	#32
	jlt	t151	t152	t153
	goto_eq	t153	#1	.L733
	goto	.L734

.L733:
	load	i	t154
	exp_arroff	t155,	[result, t154]
	ASSIGN	t	t155
	load	t	t156
	arg	t156
	call_void	putint
	load	i	t157
	ASSIGN	t158	#1
	add	t157	t158	t159
	ASSIGN	i	t159
	goto	.L732

.L734:
	ASSIGN	t160	#-140
	add	t160	fp	t161
	ASSIGN	t162	#-268
	add	t162	fp	t163
	arg	t161
	arg	t163
	CALL	arrCopy	t164
	ASSIGN	t	t164
	ASSIGN	t165	#-268
	add	t165	fp	t166
	ASSIGN	t167	#4
	arg	t166
	arg	t167
	CALL	calSum	t168
	ASSIGN	t	t168
	ASSIGN	t169	#0
	ASSIGN	i	t169

.L756:
	load	i	t170
	ASSIGN	t171	#32
	jlt	t170	t171	t172
	goto_eq	t172	#1	.L757
	goto	.L758

.L757:
	load	i	t173
	exp_arroff	t174,	[result, t173]
	ASSIGN	t	t174
	load	t	t175
	arg	t175
	call_void	putint
	load	i	t176
	ASSIGN	t177	#1
	add	t176	t177	t178
	ASSIGN	i	t178
	goto	.L756

.L758:
	ASSIGN	t179	#-140
	add	t179	fp	t180
	ASSIGN	t181	#-268
	add	t181	fp	t182
	arg	t180
	arg	t182
	CALL	arrCopy	t183
	ASSIGN	t	t183
	ASSIGN	t184	#-268
	add	t184	fp	t185
	ASSIGN	t186	#3
	arg	t185
	arg	t186
	CALL	avgPooling	t187
	ASSIGN	t	t187
	ASSIGN	t188	#0
	ASSIGN	i	t188

.L780:
	load	i	t189
	ASSIGN	t190	#32
	jlt	t189	t190	t191
	goto_eq	t191	#1	.L781
	goto	.L782

.L781:
	load	i	t192
	exp_arroff	t193,	[result, t192]
	ASSIGN	t	t193
	load	t	t194
	arg	t194
	call_void	putint
	load	i	t195
	ASSIGN	t196	#1
	add	t195	t196	t197
	ASSIGN	i	t197
	goto	.L780

.L782:
	ASSIGN	t198	#0
	ASSIGN	r0	t198
	goto	.L521

.L521:
	func_end:	main
