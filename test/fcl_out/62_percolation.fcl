	alloca	#440	array
	alloca	#4	n

init:
	param	n
	alloca	#4	n
	alloca	#4	i
	ASSIGN	t0	#1
	ASSIGN	i	t0

.L2:
	load	i	t6
	load	n	t1
	load	n	t2
	mul	t1	t2	t3
	ASSIGN	t4	#1
	add	t3	t4	t5
	jle	t6	t5	t7
	goto_eq	t7	#1	.L3
	goto	.L4

.L3:
	ASSIGN	t8	#-1
	arroff_exp	t8,	[array, t6]
	load	i	t9
	ASSIGN	t10	#1
	add	t9	t10	t11
	ASSIGN	i	t11
	goto	.L2

.L4:

.L1:
	func_end:	init

findfa:
	param	a
	alloca	#4	a
	load	a	t0
	exp_arroff	t1,	[array, t0]
	eq	t1	t0	t2
	goto_eq	t2	#1	.L24
	goto	.L25

.L24:
	ASSIGN	r0	t0
	goto	.L23
	goto	.L26

.L25:
	load	a	t3
	exp_arroff	t4,	[array, t3]
	arg	t4
	CALL	findfa	t5
	arroff_exp	t5,	[array, t3]
	exp_arroff	t6,	[array, t3]
	ASSIGN	r0	t6
	goto	.L23

.L26:

.L23:
	func_end:	findfa

mmerge:
	param	a
	alloca	#4	a
	param	b
	alloca	#4	b
	load	a	t0
	arg	t0
	CALL	findfa	t1
	alloca	#4	m
	ASSIGN	m	t1
	load	b	t2
	arg	t2
	CALL	findfa	t3
	alloca	#4	n
	ASSIGN	n	t3
	load	m	t4
	load	n	t5
	neq	t4	t5	t6
	goto_eq	t6	#1	.L34
	goto	.L35

.L34:
	arroff_exp	t5,	[array, t4]

.L35:

.L33:
	func_end:	mmerge

main:
	alloca	#4	t
	alloca	#4	m
	alloca	#4	a
	alloca	#4	b
	ASSIGN	t0	#1
	ASSIGN	t	t0

.L46:
	load	t	t1
	neq	t1	#0	t1
	goto_eq	t1	#1	.L47
	goto	.L48

.L47:
	load	t	t2
	ASSIGN	t3	#1
	sub	t2	t3	t4
	ASSIGN	t	t4
	ASSIGN	t5	#4
	ASSIGN	n	t5
	ASSIGN	t6	#10
	ASSIGN	m	t6
	alloca	#4	i
	ASSIGN	t7	#0
	ASSIGN	i	t7
	alloca	#4	flag
	ASSIGN	t8	#0
	ASSIGN	flag	t8
	load	n	t9
	arg	t9
	call_void	init
	mul	t9	t9	t10
	ASSIGN	t11	#1
	add	t10	t11	t12
	alloca	#4	k
	ASSIGN	k	t12

.L67:
	load	i	t13
	load	m	t14
	jlt	t13	t14	t15
	goto_eq	t15	#1	.L68
	goto	.L69

.L68:
	CALL	getint	t16
	ASSIGN	a	t16
	CALL	getint	t17
	ASSIGN	b	t17
	load	flag	t18
	not	t18	t19
	goto_eq	t19	#1	.L79
	goto	.L80

.L79:
	load	a	t20
	ASSIGN	t21	#1
	sub	t20	t21	t22
	mul	t9	t22	t23
	load	b	t24
	add	t23	t24	t25
	alloca	#4	loc
	ASSIGN	loc	t25
	load	loc	t26
	load	loc	t27
	arroff_exp	t27,	[array, t26]
	load	a	t28
	ASSIGN	t29	#1
	eq	t28	t29	t30
	goto_eq	t30	#1	.L93
	goto	.L94

.L93:
	ASSIGN	t31	#0
	ASSIGN	t32	#0
	arroff_exp	t32,	[array, t31]
	load	loc	t33
	ASSIGN	t34	#0
	arg	t33
	arg	t34
	call_void	mmerge

.L94:
	load	a	t35
	load	n	t36
	eq	t35	t36	t37
	goto_eq	t37	#1	.L101
	goto	.L102

.L101:
	load	k	t38
	load	k	t39
	arroff_exp	t39,	[array, t38]
	load	loc	t40
	load	k	t41
	arg	t40
	arg	t41
	call_void	mmerge

.L102:
	load	b	t42
	load	n	t43
	jlt	t42	t43	t44
	goto_eq	t44	#1	.L112
	goto	.L111

.L112:
	load	loc	t45
	ASSIGN	t46	#1
	add	t45	t46	t47
	exp_arroff	t48,	[array, t47]
	ASSIGN	t49	#-1
	neq	t48	t49	t50

.L113:

.L111:
	goto_eq	t44	#1	.L109
	goto	.L110

.L109:
	load	loc	t52
	ASSIGN	t53	#1
	add	t52	t53	t54
	arg	t52
	arg	t54
	call_void	mmerge

.L110:
	load	b	t55
	ASSIGN	t56	#1
	jgt	t55	t56	t57
	goto_eq	t57	#1	.L129
	goto	.L128

.L129:
	load	loc	t58
	ASSIGN	t59	#1
	sub	t58	t59	t60
	exp_arroff	t61,	[array, t60]
	ASSIGN	t62	#-1
	neq	t61	t62	t63

.L130:

.L128:
	goto_eq	t57	#1	.L126
	goto	.L127

.L126:
	load	loc	t65
	ASSIGN	t66	#1
	sub	t65	t66	t67
	arg	t65
	arg	t67
	call_void	mmerge

.L127:
	load	a	t68
	load	n	t69
	jlt	t68	t69	t70
	goto_eq	t70	#1	.L146
	goto	.L145

.L146:
	load	loc	t71
	add	t71	t69	t72
	exp_arroff	t73,	[array, t72]
	ASSIGN	t74	#-1
	neq	t73	t74	t75

.L147:

.L145:
	goto_eq	t70	#1	.L143
	goto	.L144

.L143:
	load	loc	t77
	add	t77	t69	t78
	arg	t77
	arg	t78
	call_void	mmerge

.L144:
	load	a	t79
	ASSIGN	t80	#1
	jgt	t79	t80	t81
	goto_eq	t81	#1	.L163
	goto	.L162

.L163:
	load	loc	t82
	load	n	t83
	sub	t82	t83	t84
	exp_arroff	t85,	[array, t84]
	ASSIGN	t86	#-1
	neq	t85	t86	t87

.L164:

.L162:
	goto_eq	t81	#1	.L160
	goto	.L161

.L160:
	load	loc	t89
	sub	t89	t83	t90
	arg	t89
	arg	t90
	call_void	mmerge

.L161:
	ASSIGN	t91	#0
	exp_arroff	t92,	[array, t91]
	ASSIGN	t93	#-1
	neq	t92	t93	t94
	goto_eq	t94	#1	.L183
	goto	.L182

.L183:
	load	k	t95
	exp_arroff	t96,	[array, t95]
	ASSIGN	t97	#-1
	neq	t96	t97	t98

.L184:

.L182:
	goto_eq	t94	#1	.L180
	goto	.L179

.L180:
	ASSIGN	t100	#0
	arg	t100
	CALL	findfa	t101
	load	k	t102
	arg	t102
	CALL	findfa	t103
	eq	t101	t103	t104

.L181:

.L179:
	goto_eq	t94	#1	.L177
	goto	.L178

.L177:
	ASSIGN	t106	#1
	ASSIGN	flag	t106
	ASSIGN	t107	#1
	add	t13	t107	t108
	alloca	#4	tmp
	ASSIGN	tmp	t108
	load	tmp	t109
	arg	t109
	call_void	putint
	ASSIGN	t110	#10
	arg	t110
	call_void	putch

.L178:

.L80:
	load	i	t111
	ASSIGN	t112	#1
	add	t111	t112	t113
	ASSIGN	i	t113
	goto	.L67

.L69:
	load	flag	t114
	not	t114	t115
	goto_eq	t115	#1	.L206
	goto	.L207

.L206:
	ASSIGN	t116	#-1
	arg	t116
	call_void	putint
	ASSIGN	t117	#10
	arg	t117
	call_void	putch

.L207:
	goto	.L46

.L48:
	ASSIGN	t118	#0
	ASSIGN	r0	t118
	goto	.L42

.L42:
	func_end:	main
