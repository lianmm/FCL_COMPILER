
get_next:
	param	str
	alloca	#4	str
	param	next
	alloca	#4	next
	ASSIGN	t0	#0
	ASSIGN	t1	#-1
	load	next	t2
	arroff_exp	t1,	[t2, t0]
	alloca	#4	i
	ASSIGN	t3	#0
	ASSIGN	i	t3
	alloca	#4	j
	ASSIGN	t4	#-1
	ASSIGN	j	t4

.L5:
	load	i	t5
	load	str	t6
	exp_arroff	t7,	[t6, t5]
	neq	t7	#0	t7
	goto_eq	t7	#1	.L6
	goto	.L7

.L6:
	load	j	t8
	ASSIGN	t9	#-1
	eq	t8	t9	t10
	goto_eq	t10	#1	.L11
	goto	.L12

.L12:
	load	str	t11
	exp_arroff	t12,	[t11, t5]
	load	str	t13
	exp_arroff	t14,	[t13, t8]
	eq	t12	t14	t15

.L13:

.L11:
	goto_eq	t10	#1	.L8
	goto	.L9

.L8:
	load	j	t17
	ASSIGN	t18	#1
	add	t17	t18	t19
	ASSIGN	j	t19
	load	i	t20
	ASSIGN	t21	#1
	add	t20	t21	t22
	ASSIGN	i	t22
	load	j	t23
	load	next	t24
	arroff_exp	t23,	[t24, t22]
	goto	.L10

.L9:
	load	j	t25
	load	next	t26
	exp_arroff	t27,	[t26, t25]
	ASSIGN	j	t27

.L10:
	goto	.L5

.L7:

.L1:
	func_end:	get_next

KMP:
	param	dst
	alloca	#4	dst
	param	src
	alloca	#4	src
	alloca	#16384	next
	load	dst	t0
	ASSIGN	t1	#-16404
	arg	t0
	arg	t1
	call_void	get_next
	alloca	#4	i
	ASSIGN	t2	#0
	ASSIGN	i	t2
	alloca	#4	j
	ASSIGN	t3	#0
	ASSIGN	j	t3

.L39:
	load	j	t4
	load	src	t5
	exp_arroff	t6,	[t5, t4]
	neq	t6	#0	t6
	goto_eq	t6	#1	.L40
	goto	.L41

.L40:
	load	i	t7
	load	dst	t8
	exp_arroff	t9,	[t8, t7]
	load	src	t10
	exp_arroff	t11,	[t10, t4]
	eq	t9	t11	t12
	goto_eq	t12	#1	.L42
	goto	.L43

.L42:
	load	i	t13
	ASSIGN	t14	#1
	add	t13	t14	t15
	ASSIGN	i	t15
	load	j	t16
	ASSIGN	t17	#1
	add	t16	t17	t18
	ASSIGN	j	t18
	not	t15	t19
	goto_eq	t19	#1	.L60
	goto	.L61

.L60:
	load	j	t20
	ASSIGN	r0	t20
	goto	.L38

.L61:
	goto	.L44

.L43:
	load	i	t21
	exp_arroff	t22,	[next, t21]
	ASSIGN	i	t22
	load	i	t23
	ASSIGN	t24	#-1
	eq	t23	t24	t25
	goto_eq	t25	#1	.L65
	goto	.L66

.L65:
	load	i	t26
	ASSIGN	t27	#1
	add	t26	t27	t28
	ASSIGN	i	t28
	load	j	t29
	ASSIGN	t30	#1
	add	t29	t30	t31
	ASSIGN	j	t31

.L66:

.L44:
	goto	.L39

.L41:
	ASSIGN	t32	#-1
	ASSIGN	r0	t32
	goto	.L38

.L38:
	func_end:	KMP

read_str:
	param	buf
	alloca	#4	buf
	alloca	#4	i
	ASSIGN	t0	#0
	ASSIGN	i	t0

.L83:
	ASSIGN	t1	#1
	eq	t1	#1	i
	goto_eq	t1	#1	.L84
	goto	.L85

.L84:
	load	i	t2
	CALL	getch	t3
	load	buf	t4
	arroff_exp	t3,	[t4, t2]
	load	buf	t5
	exp_arroff	t6,	[t5, t2]
	ASSIGN	t7	#10
	eq	t6	t7	t8
	goto_eq	t8	#1	.L89
	goto	.L90

.L89:
	goto	.L85

.L90:
	load	i	t9
	ASSIGN	t10	#1
	add	t9	t10	t11
	ASSIGN	i	t11
	goto	.L83

.L85:
	load	i	t12
	ASSIGN	t13	#0
	load	buf	t14
	arroff_exp	t13,	[t14, t12]
	ASSIGN	r0	t12
	goto	.L82

.L82:
	func_end:	read_str

main:
	alloca	#16384	dst
	alloca	#16384	src
	ASSIGN	t0	#-16396
	arg	t0
	CALL	read_str	t1
	ASSIGN	t2	#-32780
	arg	t2
	CALL	read_str	t3
	ASSIGN	t4	#-16396
	ASSIGN	t5	#-32780
	arg	t4
	arg	t5
	CALL	KMP	t6
	arg	t6
	call_void	putint
	ASSIGN	t7	#10
	arg	t7
	call_void	putch
	ASSIGN	t8	#0
	ASSIGN	r0	t8
	goto	.L103

.L103:
	func_end:	main
